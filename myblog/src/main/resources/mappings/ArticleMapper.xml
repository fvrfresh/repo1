<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athome.mapper.ArticleMapper">

    <select id="findOne" parameterType="Integer" resultType="article">
        select id, title,content,createdAt from Article where id = #{id}
    </select>

    <select id="count" parameterType="string" resultType="int">
        select count('id') from ${tableName};
    </select>

    <select id="countAll" resultType="int">
        select count(id) from article;
     </select>

    <select id="findAll" parameterType="string" resultType="article">
        select title, content, createdAt, category, description, htmlString, logoFile from article order by createdAt desc
    </select>

    <select id="findAllImages" resultType="string">
        select distinct logoFile from article;
    </select>

    <select id="findCategoryForImage" resultType="map">
        select distinct a.logoFile, b.category from article a left join album b on a.logoFile = b.logoFile
    </select>

    <select id="findAllTitles" resultType="article">
        select title, createdAt from article order by createdAt desc;
    </select>
    <select id="countByCategory" parameterType="string" resultType="int">
        select count('id') from ${article} where category =#{category};
    </select>

    <select id="findByTitle" parameterType="string" resultType="article">
        select title,content,createdAt,category,description,htmlString,logoFile from article where title=#{string};
    </select>

    <select id="findCarouselByTitle" parameterType="string" resultType="article">
        select title,content,createdAt,category,description,htmlString,logoFile from articles_featured where title=#{string};
    </select>

    <select id="findPartByPage" resultType="article">
        select id, title, content, category,createdAt,description,logoFile from article order by createdAt desc limit #{start},#{count}
    </select>

    <select id="findCarousel" resultType="article">
        select title,createdAt,description,logoFile from articles_featured order by createdAt desc limit #{start},#{count}
    </select>

    <select id="findMostRecent" resultType="article">
        select id, title, createdAt,logoFile from article order by createdAt desc limit 0,3
    </select>

    <select id="findCategoryByPage" resultType="article">
        select id,title,content,category,createdAt,description,logoFile from article where category=#{category} order by createdAt desc limit #{start},#{count}
    </select>
    <select id="findRecycleByPage" resultType="article">
        select id, title, content, createdAt,description,deletedAt from article_deleted order by deletedAt desc limit #{start},#{count}
    </select>


    <select id="findPartByTitle" parameterType="string" resultType="article">
        select content,category,htmlString,logoFile from article where title = #{title}
    </select>
    <insert id="addArticle" parameterType="article">
        insert into article(title, content, createdAt, htmlString, category,description,deletedAt,logoFile)
        values (#{title},#{content},#{createdAt},#{htmlString},#{category},#{description},#{deletedAt},#{logoFile})
    </insert>

    <insert id="addFeaturedArticle" parameterType="article">
        insert into articles_featured(title, content, createdAt, htmlString, category,description,deletedAt,logoFile)
        values (#{title},#{content},#{createdAt},#{htmlString},#{category},#{description},#{deletedAt},#{logoFile})
    </insert>

    <select id="getCreatedAt" parameterType="string" resultType="java.util.Date">
        select createdAt from article where title = #{title}
    </select>

    <insert id="addRecycleArticle" parameterType="article">
        insert into article_deleted(title, content, createdAt, htmlString, category, description,deletedAt,logoFile)
        VALUES (#{title},#{content},#{createdAt},#{htmlString},#{category},#{description},#{deletedAt},#{logoFile})
    </insert>
    
    <delete id="deleteByTitle" parameterType="string">
        delete from article where title = #{title}
    </delete>

    <delete id="deleteRecycleByTitle" parameterType="string">
        delete from article_deleted where title = #{title}
    </delete>

    <select id="findRecycleByTitle" parameterType="string" resultType="article">
        select  id, title, content, createdAt, htmlString, category, description, deletedAt,logoFile from article_deleted where title = #{title}
    </select>

    <select id="findCommentsForPost" parameterType="string" resultType="comment">
        select username,content,email,website,createdAt,articleTitle from comments where articleTitle=#{postTitle} and replying is null order by createdAt asc
    </select>
    <select id="findRepliesForComment" parameterType="comment" resultType="comment">
        select username,content,email,website,createdAt,articleTitle from comments where replying = #{username} and articleTitle = #{articleTitle} order by createdAt asc
    </select>
    <select id="findCommentsForPostByPage" resultType="comment">
        select username,content,email,website,createdAt,articleTitle from comments where articleTitle=#{postTitle} and replying is null order by createdAt asc limit #{start},#{count}
    </select>

    <select id="countCommentsForPost" parameterType="string" resultType="int">
        select count(id) from comments where articleTitle=#{postTitle} and replying is null
    </select>

    <insert id="addComment" parameterType="comment">
        insert into comments(username, content, email, website, articleTitle, createdAt)
        VALUES(#{username},#{content},#{email},#{website},#{articleTitle},#{createdAt})
    </insert>

    <insert id="addCommentReply" parameterType="comment">
        insert into comments(username, content, email, website, articleTitle, replying, createdAt)
        values(#{username},#{content},#{email},#{website},#{articleTitle},#{replying},#{createdAt})
    </insert>

    <select id="findMostRecentComments" resultType="comment">
        select distinct username, website, articleTitle, createdAt from comments order by createdAt desc limit 0,3
    </select>
    <update id="updateArticle" parameterType="article">
        update article set category = #{category},description = #{description},content = #{content} where title = #{title}
    </update>
    
    <select id="findAllCategories" resultType="map">
        select category,count(title) as count from article group by category;
    </select>

</mapper>